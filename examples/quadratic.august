ans1 := rand(-10..10)();
ans2 := rand(-10..10)();
func := expand((x-ans1) * (x-ans2));
# The following assertions do not properly check to see if there are other correct answers
#ASSERT(eval(func(x), x=ans1) = 0, "First root does not work");
#ASSERT(eval(func(x), x=ans2) = 0, "Second root does not work");

# The following assertion will fail when the two roots are equal
#ASSERT(convert(roots(func), set) = {[ans1, 1], [ans2, 1]}, "Roots mismatch");

# This assertion captures everything we want
ASSERT(MultiSet(roots(func)) = MultiSet(ans1, ans2), "Roots mismatch");

graph := plot(func);
#The upcoming `#!export` line will do the following
#  1. Expose ans1, ans2, and func to mobius
#  2. Create a variable func_latex in mobius, with the expression in func typeset 
#  3. Expose the graph variable to mobius as a plot

#!export ans1, ans2, func, func|latex|suffix(latex), graph|plot
